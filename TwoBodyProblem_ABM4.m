function Storage = TwoBodyProblem_ABM4(initial4,h,N,P)
% TwoBodyProblem_RK4(initial4,h,N): Use fourth order Adams-
% Bashforth-Moulton to solve two-body problem with initial 4 state
% vectors initial4 generated by another method
% Time step = h.
% Number of steps taken = N+4.
Storage = zeros(P,N+4); % assign store for N+4 time steps of data
Storage(:,[1:4]) = initial4; % store initial data
v1 = initial4(:,1); % state vector at n-4
v2 = initial4(:,2); % state vector at n-3
v3 = initial4(:,3); % state vector at n-2
v4 = initial4(:,4); % state vector at n-1 133
for count = 5:N+4
% Predictor: predict value w at time step count
f1 = TwoBodyProblem_Equations(v1,P);
f2 = TwoBodyProblem_Equations(v2,P);
f3 = TwoBodyProblem_Equations(v3,P);
f4 = TwoBodyProblem_Equations(v4,P);
w = v4 + h*(((55/24)*f4)-((59/24)*f3)+((37/24)*f2)-((9/24)*f1));
% Corrector: correct value at time step count
f5 = TwoBodyProblem_Equations(w,P);
z = v4 + h*(((9/24)*f5)+((19/24)*f4)-((5/24)*f3)+((1/24)*f2));
% update
v1 = v2;
v2 = v3;
v3 = v4;
v4 = z;
Storage(:,count) = v4; % store new position
end
end